name: Deploy ECS and RDS instances

on:
  push:
    branches:
      - createApp

jobs:
  deploy:
    runs-on: self-hosted
    
    steps:
    - name: Check out repository
      uses: actions/checkout@v2
    
    - name: Set up Homebrew
      run: |
        if ! command -v brew &> /dev/null; then
          echo "Homebrew not found, installing..."
          /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)" < /dev/null
          echo "export PATH=/opt/homebrew/bin:$PATH" >> $GITHUB_ENV  # Ensure Homebrew is in PATH
        else
          echo "Homebrew already installed"
        fi

    - name: Install PostgreSQL client using Homebrew
      run: |
        brew install postgresql

    - name: Install AWS Session Manager Plugin
      run: |
        curl -L "https://s3.amazonaws.com/session-manager-downloads/plugin/latest/ubuntu_64bit/session-manager-plugin.deb" -o "session-manager-plugin.deb"
        sudo dpkg -i session-manager-plugin.deb


    - name: Set up environment variables
      run: |
        echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> $GITHUB_ENV
        echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> $GITHUB_ENV

    - name: Initialise terraform
      run: terraform init
      working-directory: terraform


    - name: Validate terraform
      run: terraform validate
      working-directory: terraform

    - name: Apply terraform
      run: |
        terraform apply -auto-approve \
        -var "db_username=$DB_USERNAME" \
        -var "db_password=$DB_PASSWORD"
      working-directory: terraform

    - name: Check outputs
      run: terraform output
      working-directory: terraform


    - name: Set up environment variables
      run: |
        echo "DB_HOST=$(terraform output -raw rds_host)" >> $GITHUB_ENV
        echo "DB_PORT=$(terraform output -raw rds_port)" >> $GITHUB_ENV
        echo "ECS_CLUSTER=$(terraform output -raw ecs_cluster_name)" >> $GITHUB_ENV
        echo "ECS_SERVICE=$(terraform output -raw ecs_service_name)" >> $GITHUB_ENV
      working-directory: terraform


    - name: Get Running ECS Task ID
      id: get_task
      run: |
          TASK_ID=$(aws ecs list-tasks --cluster $ECS_CLUSTER --service-name $ECS_SERVICE --query 'taskArns[0]' --output text)
          echo "TASK_ID=$TASK_ID" >> $GITHUB_ENV

    - name: Execute SQL Script in ECS
      run: |
          aws ecs execute-command \
            --cluster $ECS_CLUSTER \
            --task $TASK_ID \
            --container your-container-name \
            --command "PGPASSWORD=$DB_PASSWORD psql -h $DB_HOST -p $DB_PORT -U $DB_USERNAME -d gatedb -f create-local-postgres-db.sql" \
            --interactive
      working-directory: sql


    - name: Make deploy.sh executable
      run: chmod +x scripts/deploy.sh
      working-directory: ${{ github.workspace }}

    - name: Run deploy docker script
      run: ./scripts/deploy.sh
      working-directory: ${{ github.workspace }}
      shell: bash