name: Deploy Terraform

on:
  push:
    branches:
      - createApp

jobs:
  terraform:
    name: Apply Terraform Configuration
    runs-on: self-hosted

    env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Debug AWS Credentials
        run: |
          echo "AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}"
          echo "AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}"
          echo "AWS_REGION: ${{ secrets.AWS_REGION }}"

      - name: Generate terraform.tfvars file
        run: |
          echo "db_username = \"${{ secrets.DB_USERNAME }}\"" >> terraform.tfvars
          echo "db_password = \"${{ secrets.DB_PASSWORD }}\"" >> terraform.tfvars
        working-directory: terraform

      - name: Initialize Terraform
        run: terraform init
        working-directory: terraform

      - name: Validate Terraform
        run: terraform validate
        working-directory: terraform

      - name: Plan Terraform
        run: terraform plan
        working-directory: terraform

      - name: Apply Terraform Configuration
        run: terraform apply -auto-approve
        working-directory: terraform

      - name: Install PostgreSQL Client
        run: sudo apt-get install -y postgresql-client

      #- name: Run SQL Script
      #  run: |
      #      PGPASSWORD=${{ secrets.DB_PASSWORD }} psql -h my-rds-endpoint.amazonaws.com -U ${{ secrets.DB_USERNAME }} -d mydatabase -f database/init.sql
      #  working-directory: sql