name: Deploy ECS and RDS instances

on:
  push:
    branches:
      - createApp

jobs:
  terraform-rds:
    runs-on: self-hosted
    
    steps:
    - name: Check out repository
      uses: actions/checkout@v2
    
    - name: Set up Homebrew
      run: |
        if ! command -v brew &> /dev/null; then
          echo "Homebrew not found, installing..."
          /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)" < /dev/null
          echo "export PATH=/opt/homebrew/bin:$PATH" >> $GITHUB_ENV  # Ensure Homebrew is in PATH
        else
          echo "Homebrew already installed"
        fi

    - name: Install PostgreSQL client using Homebrew
      run: |
        brew install postgresql

    - name: Install AWS CLI via Homebrew
      run: |
        brew install awscli
        aws --version

    - name: Set up environment variables
      run: |
        echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> $GITHUB_ENV
        echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> $GITHUB_ENV
        echo "AWS_REGION=${{ secrets.AWS_REGION }}" >> $GITHUB_ENV
        echo "DB_USERNAME=$DB_USERNAME"
        echo "DB_PASSWORD=$DB_PASSWORD"
        echo "AWS_REGION=$AWS_REGION"


    - name: Initialise terraform
      run: terraform init
      working-directory: terraform

    - name: Apply terraform
      run: |
        terraform apply -auto-approve -target=aws_db_instance.application_database -target=aws_ecr_repository.ecr_repo_for_docker_image \
        -var "db_username=$DB_USERNAME" \
        -var "db_password=$DB_PASSWORD"
      working-directory: terraform

    - name: Check outputs
      run: terraform output
      working-directory: terraform


    - name: Set up environment variables
      run: |
        echo "DB_HOST=$(terraform output -raw rds_host)" >> $GITHUB_ENV
        echo "DB_PORT=$(terraform output -raw rds_port)" >> $GITHUB_ENV
        echo "ECR_URI=$(terraform output -raw repository_url)" >> $GITHUB_ENV
      working-directory: terraform

  deploy-docker-image:
    runs-on: self-hosted
    
    steps:
    - name: Make deploy.sh executable
      run: chmod +x scripts/deploy.sh
      working-directory: ${{ github.workspace }}

    - name: Run deploy docker script
      run: ./scripts/deploy.sh v1.0
      working-directory: ${{ github.workspace }}
      shell: bash

  terraform-ecs:
    runs-on: self-hosted

    steps:
    - name: Create ECS instance containing docker image
      run: terraform apply -auto-approve \
            -target=aws_ecs_cluster.cluster \
            -target=aws_ecs_task_definition.task_definition \
            -target=aws_ecs_service.service \
            -auto-approve
            -var "container_image=${{ env.ECR_WITH_TAG }}"